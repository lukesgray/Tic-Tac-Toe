char **create_board()
    -allocates memory for the game board and initializes each element to '\0'
    -returns double char pointer to game board
bool is_full(char **board)
    -requires double char pointer to created game board
    -iterates over each element of the game board 2d array checking for the value '\0'
    -returns false if '\0' is found and returns true if '\0' is NOT found 
bool is_valid_command(char *user_input)
    -requires pointer to char array
    -contains a check for length of 2 and a general catch all for command format
    -returns false if they fail and true if successful



parse_command(int *row, int *column, char *user_input);
    -requires pointers to 2 numbers that represent the row and column of the 2d array
    -requires pointer to parsed user_input
    -sets the row and column int values according to parsed user_input

bool is_available(int row, int column, char **game);
    -requires int values representing specified position on game board
    -requires double pointer to game board
    -checks if specified spot on game board is equal to '\0'
    -returns true if '\0' is found and false if '\0' is NOT found

game winner cases:
    -Row win: row is all the same
    -Column win: column is all the same
    -Diagonal win: 



Features to add:
    -Restrictions:
        1. Distinct markers for each player
        2. Number of players input must be a whole number
        3. Number of players restricted to two for tic-tac-toe
        4. Name of player cannot be blank
    -Control Flow
        1. Players input their name and marker at the same time
        2. Players can change their name or marker on their turn
    -Other
        1. Checks for game being impossible to win

Code to Refactor:
    -Loop function that houses which ever functions you want to use in body
        (requires counter < "number of players" variable)
    -Number of Players into a function
    -Each space for a marker is a struct with pointers to adjacent spaces (needed for using for Catan)
    -Clean code up based on coding convention videos

Schedule:
    -Loop Functions
        -Number of players restricted to two for ttt
        -Players input marker and name at the same time
        -Distinct markers for each player
        -Name of player cannot be blank
    -Clean code up based on coding convention videos
        -Player can change their name or marker on their turn
    -Each space is struct
        -Checks for game being impossible to win
    


Catan:
    1. Player can request an undo for the player before them